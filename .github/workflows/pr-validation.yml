name: PR Validation

on:
  pull_request:
    types: [opened, synchronize, reopened, ready_for_review]
    branches: [ master, main ]

jobs:
  pr-checks:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run ESLint
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Build check
        run: npm run build

      - name: Check PR size
        run: |
          CHANGED_FILES=$(git diff --name-only HEAD~1 | wc -l)
          CHANGED_LINES=$(git diff --stat HEAD~1 | tail -1 | awk '{print $4+$6}')
          echo "Changed files: $CHANGED_FILES"
          echo "Changed lines: $CHANGED_LINES"

          if [ "$CHANGED_FILES" -gt 50 ]; then
            echo "❌ PR too large: $CHANGED_FILES files changed"
            exit 1
          fi

          if [ "$CHANGED_LINES" -gt 1000 ]; then
            echo "❌ PR too large: $CHANGED_LINES lines changed"
            exit 1
          fi

          echo "✅ PR size acceptable"

  pr-validation:
    runs-on: ubuntu-latest
    steps:
      - name: Validate PR title
        run: |
          TITLE="${{ github.event.pull_request.title }}"
          if [[ ! "$TITLE" =~ ^(feat|fix|docs|style|refactor|test|chore|perf|ci|build|revert)(\(.+\))?: ]]; then
            echo "❌ PR title must follow conventional commits format"
            echo "Expected: type(scope): description"
            echo "Examples: feat(api): add user authentication"
            exit 1
          fi
          echo "✅ PR title format valid"

      - name: Check PR description
        run: |
          BODY="${{ github.event.pull_request.body }}"
          if [ -z "$BODY" ]; then
            echo "❌ PR must have a description"
            exit 1
          fi

          if [[ ! "$BODY" =~ "Checklist" ]]; then
            echo "❌ PR must include a checklist section"
            exit 1
          fi

          echo "✅ PR description includes checklist"

      - name: Validate branch naming
        run: |
          BRANCH="${{ github.head_ref }}"
          if [[ ! "$BRANCH" =~ ^(feature|bugfix|hotfix|chore)/ ]]; then
            echo "❌ Branch must follow naming convention: feature/, bugfix/, hotfix/, chore/"
            exit 1
          fi
          echo "✅ Branch naming convention followed"

  security-scan:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v5

      - name: Run Trivy vulnerability scanner
        uses: aquasecurity/trivy-action@master
        with:
          scan-type: 'fs'
          scan-ref: '.'
          format: 'sarif'
          output: 'trivy-results.sarif'

      - name: Upload Trivy scan results
        uses: github/codeql-action/upload-sarif@v3
        if: always()
        with:
          sarif_file: 'trivy-results.sarif'