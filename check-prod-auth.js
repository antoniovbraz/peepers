#!/usr/bin/env node

/**
 * Script para testar se a autentica√ß√£o OAuth foi bem-sucedida
 * Verifica se h√° tokens v√°lidos no cache de produ√ß√£o
 */

require('dotenv').config({ path: '.env.local' });

async function checkProdAuth() {
  console.log('üîç VERIFICA√á√ÉO DE AUTENTICA√á√ÉO PRODU√á√ÉO');
  console.log('======================================\n');
  
  // URL mais recente do deploy
  const BASE_URL = 'https://peepers-n9yvsw84x-antoniovbrazs-projects.vercel.app';
  
  console.log('1. Verificando se a p√°gina de callback funcionou...');
  console.log('   (Testando atrav√©s do status da sincroniza√ß√£o)\n');
  
  // Primeiro, tentar o endpoint de sincroniza√ß√£o simples (GET)
  try {
    console.log('Tentando sincroniza√ß√£o GET...');
    const response = await fetch(`${BASE_URL}/api/ml/sync?action=sync`, {
      method: 'GET',
      headers: {
        'User-Agent': 'Peepers-Auth-Check/1.0'
      }
    });
    
    console.log(`Status: ${response.status} ${response.statusText}`);
    
    if (response.status === 200) {
      const text = await response.text();
      if (text.includes('success') || text.includes('produtos') || text.includes('sync')) {
        console.log('‚úÖ Sincroniza√ß√£o iniciada - autentica√ß√£o provavelmente OK');
        return true;
      }
    } else if (response.status === 401) {
      console.log('‚ùå Ainda sem autentica√ß√£o v√°lida');
    }
    
  } catch (error) {
    console.log(`Erro na verifica√ß√£o: ${error.message}`);
  }
  
  console.log('\n2. Tentando com POST e admin token...');
  
  try {
    const response = await fetch(`${BASE_URL}/api/ml/sync`, {
      method: 'POST',
      headers: {
        'Authorization': 'Bearer peepers-admin-secret-2024-sync-access',
        'Content-Type': 'application/json',
        'User-Agent': 'Peepers-Auth-Check/1.0'
      }
    });
    
    console.log(`Status: ${response.status} ${response.statusText}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log('‚úÖ Sincroniza√ß√£o manual funcionou!');
      console.log(`Resultado: ${JSON.stringify(data, null, 2)}`);
      return true;
    } else {
      const errorData = await response.json().catch(() => ({}));
      console.log(`‚ùå Erro: ${errorData.error || 'Erro desconhecido'}`);
      
      if (errorData.hint) {
        console.log(`üí° Dica: ${errorData.hint}`);
      }
    }
    
  } catch (error) {
    console.log(`Erro na requisi√ß√£o POST: ${error.message}`);
  }
  
  console.log('\n3. Verificando endpoint de produtos...');
  
  try {
    const response = await fetch(`${BASE_URL}/api/products`, {
      headers: {
        'User-Agent': 'Peepers-Auth-Check/1.0'
      }
    });
    
    console.log(`Status: ${response.status} ${response.statusText}`);
    
    if (response.ok) {
      const data = await response.json();
      console.log(`‚úÖ Produtos: ${data.products ? data.products.length : 0} encontrados`);
      
      if (data.products && data.products.length > 0) {
        console.log('üéâ SUCESSO! Sistema est√° funcionando completamente');
        return true;
      } else if (data.message && data.message.includes('sync')) {
        console.log('üí° Produtos n√£o encontrados - sincroniza√ß√£o necess√°ria');
      }
    }
    
  } catch (error) {
    console.log(`Erro na verifica√ß√£o de produtos: ${error.message}`);
  }
  
  return false;
}

async function main() {
  const success = await checkProdAuth();
  
  console.log('\nüìã RESULTADO FINAL:');
  console.log('==================');
  
  if (success) {
    console.log('üéâ ‚úÖ AUTENTICA√á√ÉO FUNCIONANDO!');
    console.log('   O sistema est√° operacional e tokens v√°lidos');
  } else {
    console.log('‚ùå PROBLEMA PERSISTENTE');
    console.log('   Poss√≠veis causas:');
    console.log('   1. Prote√ß√£o de autentica√ß√£o do Vercel ainda ativa');
    console.log('   2. Token n√£o foi salvo corretamente');
    console.log('   3. Erro no processo de callback');
    console.log('');
    console.log('üí° PR√ìXIMOS PASSOS:');
    console.log('   - Verificar logs do Vercel');
    console.log('   - Tentar nova autentica√ß√£o se necess√°rio');
    console.log('   - URL: https://peepers.vercel.app/api/ml/auth');
  }
}

main().catch(console.error);